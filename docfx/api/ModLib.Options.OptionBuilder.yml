### YamlMime:ManagedReference
items:
- uid: ModLib.Options.OptionBuilder
  commentId: T:ModLib.Options.OptionBuilder
  id: OptionBuilder
  parent: ModLib.Options
  children:
  - ModLib.Options.OptionBuilder.#ctor(Menu.Remix.MixedUI.OpTab)
  - ModLib.Options.OptionBuilder.#ctor(OptionInterface,System.String,UnityEngine.Color[])
  - ModLib.Options.OptionBuilder.AddCheckBoxOption(System.String,Configurable{System.Boolean},UnityEngine.Color[])
  - ModLib.Options.OptionBuilder.AddComboBoxOption(System.String,Configurable{System.String},System.Single,UnityEngine.Color[])
  - ModLib.Options.OptionBuilder.AddElements(Menu.Remix.MixedUI.UIelement[])
  - ModLib.Options.OptionBuilder.AddPadding(UnityEngine.Vector2)
  - ModLib.Options.OptionBuilder.AddSliderOption(System.String,Configurable{System.Int32},System.Single,System.Boolean,UnityEngine.Color[])
  - ModLib.Options.OptionBuilder.AddText(System.String,UnityEngine.Vector2,System.Boolean,System.Nullable{UnityEngine.Color})
  - ModLib.Options.OptionBuilder.Build
  - ModLib.Options.OptionBuilder.GetOrigin
  - ModLib.Options.OptionBuilder.ResetOrigin
  - ModLib.Options.OptionBuilder.SetOrigin(UnityEngine.Vector2)
  langs:
  - csharp
  - vb
  name: OptionBuilder
  nameWithType: OptionBuilder
  fullName: ModLib.Options.OptionBuilder
  type: Class
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: OptionBuilder
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 12
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Helper class for building <code>OpTab</code>s with a variety of chain-able methods.
  remarks: To return the generated <code>OpTab</code> object, use <xref href="ModLib.Options.OptionBuilder.Build" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class OptionBuilder
    content.vb: Public Class OptionBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: ModLib.Options.OptionBuilder.#ctor(Menu.Remix.MixedUI.OpTab)
  commentId: M:ModLib.Options.OptionBuilder.#ctor(Menu.Remix.MixedUI.OpTab)
  id: '#ctor(Menu.Remix.MixedUI.OpTab)'
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: OptionBuilder(OpTab)
  nameWithType: OptionBuilder.OptionBuilder(OpTab)
  fullName: ModLib.Options.OptionBuilder.OptionBuilder(Menu.Remix.MixedUI.OpTab)
  type: Constructor
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: .ctor
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 12
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Helper class for building <code>OpTab</code>s with a variety of chain-able methods.
  remarks: To return the generated <code>OpTab</code> object, use <xref href="ModLib.Options.OptionBuilder.Build" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public OptionBuilder(OpTab opTab)
    parameters:
    - id: opTab
      type: Menu.Remix.MixedUI.OpTab
    content.vb: Public Sub New(opTab As OpTab)
  overload: ModLib.Options.OptionBuilder.#ctor*
  nameWithType.vb: OptionBuilder.New(OpTab)
  fullName.vb: ModLib.Options.OptionBuilder.New(Menu.Remix.MixedUI.OpTab)
  name.vb: New(OpTab)
- uid: ModLib.Options.OptionBuilder.#ctor(OptionInterface,System.String,UnityEngine.Color[])
  commentId: M:ModLib.Options.OptionBuilder.#ctor(OptionInterface,System.String,UnityEngine.Color[])
  id: '#ctor(OptionInterface,System.String,UnityEngine.Color[])'
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: OptionBuilder(OptionInterface, string, params Color[])
  nameWithType: OptionBuilder.OptionBuilder(OptionInterface, string, params Color[])
  fullName: ModLib.Options.OptionBuilder.OptionBuilder(OptionInterface, string, params UnityEngine.Color[])
  type: Constructor
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: .ctor
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 27
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Initializes a new <code>OptionBuilder</code> instance for creating option tabs.
  example: []
  syntax:
    content: public OptionBuilder(OptionInterface owner, string tabName, params Color[] colors)
    parameters:
    - id: owner
      type: OptionInterface
      description: The <code>OptionInterface</code> who will own the resulting <code>OpTab</code> instance.
    - id: tabName
      type: System.String
      description: The name of the tab itself, displayed on the left side of the menu; Only visible with two or more tabs.
    - id: colors
      type: UnityEngine.Color[]
      description: >-
        The color values to be used by the <code>OpTab</code> instance.

        Colors are retrieved by index and applied to relevant fields in alphabetical order.
    content.vb: Public Sub New(owner As OptionInterface, tabName As String, ParamArray colors As Color())
  overload: ModLib.Options.OptionBuilder.#ctor*
  nameWithType.vb: OptionBuilder.New(OptionInterface, String, ParamArray Color())
  fullName.vb: ModLib.Options.OptionBuilder.New(OptionInterface, String, ParamArray UnityEngine.Color())
  name.vb: New(OptionInterface, String, ParamArray Color())
- uid: ModLib.Options.OptionBuilder.Build
  commentId: M:ModLib.Options.OptionBuilder.Build
  id: Build
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: OptionBuilder.Build()
  fullName: ModLib.Options.OptionBuilder.Build()
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: Build
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 42
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Returns the generated <code>OpTab</code> object with the applied options of previous methods.
  example: []
  syntax:
    content: public OpTab Build()
    return:
      type: Menu.Remix.MixedUI.OpTab
      description: The builder's <code>OpTab</code> instance.
    content.vb: Public Function Build() As OpTab
  overload: ModLib.Options.OptionBuilder.Build*
- uid: ModLib.Options.OptionBuilder.AddCheckBoxOption(System.String,Configurable{System.Boolean},UnityEngine.Color[])
  commentId: M:ModLib.Options.OptionBuilder.AddCheckBoxOption(System.String,Configurable{System.Boolean},UnityEngine.Color[])
  id: AddCheckBoxOption(System.String,Configurable{System.Boolean},UnityEngine.Color[])
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddCheckBoxOption(string, Configurable<bool>, params Color[])
  nameWithType: OptionBuilder.AddCheckBoxOption(string, Configurable<bool>, params Color[])
  fullName: ModLib.Options.OptionBuilder.AddCheckBoxOption(string, Configurable<bool>, params UnityEngine.Color[])
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddCheckBoxOption
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 54
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds a new <code>OpCheckBox</code> to the <code>OpTab</code> instance, with a descriptive <code>OpLabel</code> after it.
  example: []
  syntax:
    content: public OptionBuilder AddCheckBoxOption(string text, Configurable<bool> configurable, params Color[] colors)
    parameters:
    - id: text
      type: System.String
      description: The check box's label. Will be displayed right after the box itself.
    - id: configurable
      type: Configurable{System.Boolean}
      description: The <code>Configurable</code> this check box will be bound to.
    - id: colors
      type: UnityEngine.Color[]
      description: >-
        The color values to be used by the <code>OpLabel</code> and <code>OpCheckBox</code> instance.

        Colors are retrieved by index and applied to relevant fields in alphabetical order.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddCheckBoxOption(text As String, configurable As Configurable(Of Boolean), ParamArray colors As Color()) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddCheckBoxOption*
  nameWithType.vb: OptionBuilder.AddCheckBoxOption(String, Configurable(Of Boolean), ParamArray Color())
  fullName.vb: ModLib.Options.OptionBuilder.AddCheckBoxOption(String, Configurable(Of Boolean), ParamArray UnityEngine.Color())
  name.vb: AddCheckBoxOption(String, Configurable(Of Boolean), ParamArray Color())
- uid: ModLib.Options.OptionBuilder.AddComboBoxOption(System.String,Configurable{System.String},System.Single,UnityEngine.Color[])
  commentId: M:ModLib.Options.OptionBuilder.AddComboBoxOption(System.String,Configurable{System.String},System.Single,UnityEngine.Color[])
  id: AddComboBoxOption(System.String,Configurable{System.String},System.Single,UnityEngine.Color[])
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddComboBoxOption(string, Configurable<string>, float, params Color[])
  nameWithType: OptionBuilder.AddComboBoxOption(string, Configurable<string>, float, params Color[])
  fullName: ModLib.Options.OptionBuilder.AddComboBoxOption(string, Configurable<string>, float, params UnityEngine.Color[])
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddComboBoxOption
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 91
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds a new <code>OpComboBox</code> to the <code>OpTab</code> instance, with a descriptive <code>OpLabel</code> after it.
  example: []
  syntax:
    content: public OptionBuilder AddComboBoxOption(string text, Configurable<string> configurable, float width = 200, params Color[] colors)
    parameters:
    - id: text
      type: System.String
      description: The combo box's label. Will be displayed right after the box itself.
    - id: configurable
      type: Configurable{System.String}
      description: The <code>Configurable</code> this combo box will be bound to.
    - id: width
      type: System.Single
      description: The width of the combo box element.
    - id: colors
      type: UnityEngine.Color[]
      description: >-
        The color values to be used by the <code>OpLabel</code> and <code>OpComboBox</code> instance.

        Colors are retrieved by index and applied to relevant fields in alphabetical order.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddComboBoxOption(text As String, configurable As Configurable(Of String), width As Single = 200, ParamArray colors As Color()) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddComboBoxOption*
  nameWithType.vb: OptionBuilder.AddComboBoxOption(String, Configurable(Of String), Single, ParamArray Color())
  fullName.vb: ModLib.Options.OptionBuilder.AddComboBoxOption(String, Configurable(Of String), Single, ParamArray UnityEngine.Color())
  name.vb: AddComboBoxOption(String, Configurable(Of String), Single, ParamArray Color())
- uid: ModLib.Options.OptionBuilder.AddSliderOption(System.String,Configurable{System.Int32},System.Single,System.Boolean,UnityEngine.Color[])
  commentId: M:ModLib.Options.OptionBuilder.AddSliderOption(System.String,Configurable{System.Int32},System.Single,System.Boolean,UnityEngine.Color[])
  id: AddSliderOption(System.String,Configurable{System.Int32},System.Single,System.Boolean,UnityEngine.Color[])
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddSliderOption(string, Configurable<int>, float, bool, params Color[])
  nameWithType: OptionBuilder.AddSliderOption(string, Configurable<int>, float, bool, params Color[])
  fullName: ModLib.Options.OptionBuilder.AddSliderOption(string, Configurable<int>, float, bool, params UnityEngine.Color[])
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddSliderOption
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 129
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds a new <code>OpSlider</code> to the <code>OpTab</code> instance, with a descriptive <code>OpLabel</code> before it.
  example: []
  syntax:
    content: public OptionBuilder AddSliderOption(string text, Configurable<int> configurable, float multi = 1, bool vertical = false, params Color[] colors)
    parameters:
    - id: text
      type: System.String
      description: The slider's label. Will be displayed right before the slider itself.
    - id: configurable
      type: Configurable{System.Int32}
      description: The <code>Configurable</code> this slider will be bound to.
    - id: multi
      type: System.Single
      description: A multiplier for the slider's size.
    - id: vertical
      type: System.Boolean
      description: If this slider should be vertical.
    - id: colors
      type: UnityEngine.Color[]
      description: >-
        The color values to be used by the <code>OpLabel</code> and <code>OpSlider</code> instance.

        Colors are retrieved by index and applied to relevant fields in alphabetical order.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddSliderOption(text As String, configurable As Configurable(Of Integer), multi As Single = 1, vertical As Boolean = False, ParamArray colors As Color()) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddSliderOption*
  nameWithType.vb: OptionBuilder.AddSliderOption(String, Configurable(Of Integer), Single, Boolean, ParamArray Color())
  fullName.vb: ModLib.Options.OptionBuilder.AddSliderOption(String, Configurable(Of Integer), Single, Boolean, ParamArray UnityEngine.Color())
  name.vb: AddSliderOption(String, Configurable(Of Integer), Single, Boolean, ParamArray Color())
- uid: ModLib.Options.OptionBuilder.AddPadding(UnityEngine.Vector2)
  commentId: M:ModLib.Options.OptionBuilder.AddPadding(UnityEngine.Vector2)
  id: AddPadding(UnityEngine.Vector2)
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddPadding(Vector2)
  nameWithType: OptionBuilder.AddPadding(Vector2)
  fullName: ModLib.Options.OptionBuilder.AddPadding(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddPadding
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 160
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds extra space before the next object added.
  example: []
  syntax:
    content: public OptionBuilder AddPadding(Vector2 padding)
    parameters:
    - id: padding
      type: UnityEngine.Vector2
      description: The amount of padding to be added.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddPadding(padding As Vector2) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddPadding*
- uid: ModLib.Options.OptionBuilder.AddText(System.String,UnityEngine.Vector2,System.Boolean,System.Nullable{UnityEngine.Color})
  commentId: M:ModLib.Options.OptionBuilder.AddText(System.String,UnityEngine.Vector2,System.Boolean,System.Nullable{UnityEngine.Color})
  id: AddText(System.String,UnityEngine.Vector2,System.Boolean,System.Nullable{UnityEngine.Color})
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddText(string, Vector2, bool, Color?)
  nameWithType: OptionBuilder.AddText(string, Vector2, bool, Color?)
  fullName: ModLib.Options.OptionBuilder.AddText(string, UnityEngine.Vector2, bool, UnityEngine.Color?)
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddText
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 175
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds a new <code>OpLabel</code> to the <code>OpTab</code> instance.
  example: []
  syntax:
    content: public OptionBuilder AddText(string text, Vector2 size, bool bigText = false, Color? color = null)
    parameters:
    - id: text
      type: System.String
      description: The text to be rendered.
    - id: size
      type: UnityEngine.Vector2
      description: The size of the label element.
    - id: bigText
      type: System.Boolean
      description: If this text should be rendered larger than usual.
    - id: color
      type: System.Nullable{UnityEngine.Color}
      description: The color of the text.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddText(text As String, size As Vector2, bigText As Boolean = False, color As Color? = Nothing) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddText*
  nameWithType.vb: OptionBuilder.AddText(String, Vector2, Boolean, Color?)
  fullName.vb: ModLib.Options.OptionBuilder.AddText(String, UnityEngine.Vector2, Boolean, UnityEngine.Color?)
  name.vb: AddText(String, Vector2, Boolean, Color?)
- uid: ModLib.Options.OptionBuilder.GetOrigin
  commentId: M:ModLib.Options.OptionBuilder.GetOrigin
  id: GetOrigin
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: GetOrigin()
  nameWithType: OptionBuilder.GetOrigin()
  fullName: ModLib.Options.OptionBuilder.GetOrigin()
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: GetOrigin
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 197
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Retrieves the origin at which elements will be added for this <xref href="ModLib.Options.OptionBuilder" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public Vector2 GetOrigin()
    return:
      type: UnityEngine.Vector2
      description: The position at which elements will be added for this builder instance.
    content.vb: Public Function GetOrigin() As Vector2
  overload: ModLib.Options.OptionBuilder.GetOrigin*
- uid: ModLib.Options.OptionBuilder.SetOrigin(UnityEngine.Vector2)
  commentId: M:ModLib.Options.OptionBuilder.SetOrigin(UnityEngine.Vector2)
  id: SetOrigin(UnityEngine.Vector2)
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: SetOrigin(Vector2)
  nameWithType: OptionBuilder.SetOrigin(Vector2)
  fullName: ModLib.Options.OptionBuilder.SetOrigin(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: SetOrigin
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 205
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Sets the origin at which elements will be added for this <xref href="ModLib.Options.OptionBuilder" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public OptionBuilder SetOrigin(Vector2 origin)
    parameters:
    - id: origin
      type: UnityEngine.Vector2
      description: The position to be set.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function SetOrigin(origin As Vector2) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.SetOrigin*
- uid: ModLib.Options.OptionBuilder.ResetOrigin
  commentId: M:ModLib.Options.OptionBuilder.ResetOrigin
  id: ResetOrigin
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: ResetOrigin()
  nameWithType: OptionBuilder.ResetOrigin()
  fullName: ModLib.Options.OptionBuilder.ResetOrigin()
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: ResetOrigin
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 217
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Resets the origin at which elements are added for this <xref href="ModLib.Options.OptionBuilder" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public OptionBuilder ResetOrigin()
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function ResetOrigin() As OptionBuilder
  overload: ModLib.Options.OptionBuilder.ResetOrigin*
- uid: ModLib.Options.OptionBuilder.AddElements(Menu.Remix.MixedUI.UIelement[])
  commentId: M:ModLib.Options.OptionBuilder.AddElements(Menu.Remix.MixedUI.UIelement[])
  id: AddElements(Menu.Remix.MixedUI.UIelement[])
  parent: ModLib.Options.OptionBuilder
  langs:
  - csharp
  - vb
  name: AddElements(params UIelement[])
  nameWithType: OptionBuilder.AddElements(params UIelement[])
  fullName: ModLib.Options.OptionBuilder.AddElements(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  source:
    remote:
      path: ModLib/Options/OptionBuilder.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: AddElements
    path: ../ModLib/Options/OptionBuilder.cs
    startLine: 230
  assemblies:
  - ModLib
  namespace: ModLib.Options
  summary: Adds one or more <xref href="Menu.Remix.MixedUI.UIelement" data-throw-if-not-resolved="false"></xref> objects to the <code>OpTab</code> instance.
  example: []
  syntax:
    content: public OptionBuilder AddElements(params UIelement[] elements)
    parameters:
    - id: elements
      type: Menu.Remix.MixedUI.UIelement[]
      description: The elements to be added.
    return:
      type: ModLib.Options.OptionBuilder
      description: The <code>OptionBuilder</code> object.
    content.vb: Public Function AddElements(ParamArray elements As UIelement()) As OptionBuilder
  overload: ModLib.Options.OptionBuilder.AddElements*
  nameWithType.vb: OptionBuilder.AddElements(ParamArray UIelement())
  fullName.vb: ModLib.Options.OptionBuilder.AddElements(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: AddElements(ParamArray UIelement())
references:
- uid: ModLib.Options.OptionBuilder.Build
  commentId: M:ModLib.Options.OptionBuilder.Build
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_Build
  name: Build()
  nameWithType: OptionBuilder.Build()
  fullName: ModLib.Options.OptionBuilder.Build()
  spec.csharp:
  - uid: ModLib.Options.OptionBuilder.Build
    name: Build
    href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_Build
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.Options.OptionBuilder.Build
    name: Build
    href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_Build
  - name: (
  - name: )
- uid: ModLib.Options
  commentId: N:ModLib.Options
  href: ModLib.html
  name: ModLib.Options
  nameWithType: ModLib.Options
  fullName: ModLib.Options
  spec.csharp:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Options
    name: Options
    href: ModLib.Options.html
  spec.vb:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Options
    name: Options
    href: ModLib.Options.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ModLib.Options.OptionBuilder.#ctor*
  commentId: Overload:ModLib.Options.OptionBuilder.#ctor
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder__ctor_Menu_Remix_MixedUI_OpTab_
  name: OptionBuilder
  nameWithType: OptionBuilder.OptionBuilder
  fullName: ModLib.Options.OptionBuilder.OptionBuilder
  nameWithType.vb: OptionBuilder.New
  fullName.vb: ModLib.Options.OptionBuilder.New
  name.vb: New
- uid: Menu.Remix.MixedUI.OpTab
  commentId: T:Menu.Remix.MixedUI.OpTab
  parent: Menu.Remix.MixedUI
  isExternal: true
  name: OpTab
  nameWithType: OpTab
  fullName: Menu.Remix.MixedUI.OpTab
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
- uid: OptionInterface
  commentId: T:OptionInterface
  isExternal: true
  name: OptionInterface
  nameWithType: OptionInterface
  fullName: OptionInterface
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: UnityEngine.Color[]
  nameWithType.vb: Color()
  fullName.vb: UnityEngine.Color()
  name.vb: Color()
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
- uid: ModLib.Options.OptionBuilder.Build*
  commentId: Overload:ModLib.Options.OptionBuilder.Build
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_Build
  name: Build
  nameWithType: OptionBuilder.Build
  fullName: ModLib.Options.OptionBuilder.Build
- uid: ModLib.Options.OptionBuilder.AddCheckBoxOption*
  commentId: Overload:ModLib.Options.OptionBuilder.AddCheckBoxOption
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddCheckBoxOption_System_String_Configurable_System_Boolean__UnityEngine_Color___
  name: AddCheckBoxOption
  nameWithType: OptionBuilder.AddCheckBoxOption
  fullName: ModLib.Options.OptionBuilder.AddCheckBoxOption
- uid: Configurable{System.Boolean}
  commentId: T:Configurable{System.Boolean}
  definition: Configurable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Configurable<bool>
  nameWithType: Configurable<bool>
  fullName: Configurable<bool>
  nameWithType.vb: Configurable(Of Boolean)
  fullName.vb: Configurable(Of Boolean)
  name.vb: Configurable(Of Boolean)
  spec.csharp:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: ModLib.Options.OptionBuilder
  commentId: T:ModLib.Options.OptionBuilder
  parent: ModLib.Options
  href: ModLib.Options.OptionBuilder.html
  name: OptionBuilder
  nameWithType: OptionBuilder
  fullName: ModLib.Options.OptionBuilder
- uid: Configurable`1
  commentId: T:Configurable`1
  isExternal: true
  name: Configurable<T>
  nameWithType: Configurable<T>
  fullName: Configurable<T>
  nameWithType.vb: Configurable(Of T)
  fullName.vb: Configurable(Of T)
  name.vb: Configurable(Of T)
  spec.csharp:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ModLib.Options.OptionBuilder.AddComboBoxOption*
  commentId: Overload:ModLib.Options.OptionBuilder.AddComboBoxOption
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddComboBoxOption_System_String_Configurable_System_String__System_Single_UnityEngine_Color___
  name: AddComboBoxOption
  nameWithType: OptionBuilder.AddComboBoxOption
  fullName: ModLib.Options.OptionBuilder.AddComboBoxOption
- uid: Configurable{System.String}
  commentId: T:Configurable{System.String}
  definition: Configurable`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Configurable<string>
  nameWithType: Configurable<string>
  fullName: Configurable<string>
  nameWithType.vb: Configurable(Of String)
  fullName.vb: Configurable(Of String)
  name.vb: Configurable(Of String)
  spec.csharp:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ModLib.Options.OptionBuilder.AddSliderOption*
  commentId: Overload:ModLib.Options.OptionBuilder.AddSliderOption
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddSliderOption_System_String_Configurable_System_Int32__System_Single_System_Boolean_UnityEngine_Color___
  name: AddSliderOption
  nameWithType: OptionBuilder.AddSliderOption
  fullName: ModLib.Options.OptionBuilder.AddSliderOption
- uid: Configurable{System.Int32}
  commentId: T:Configurable{System.Int32}
  definition: Configurable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Configurable<int>
  nameWithType: Configurable<int>
  fullName: Configurable<int>
  nameWithType.vb: Configurable(Of Integer)
  fullName.vb: Configurable(Of Integer)
  name.vb: Configurable(Of Integer)
  spec.csharp:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Configurable`1
    name: Configurable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ModLib.Options.OptionBuilder.AddPadding*
  commentId: Overload:ModLib.Options.OptionBuilder.AddPadding
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddPadding_UnityEngine_Vector2_
  name: AddPadding
  nameWithType: OptionBuilder.AddPadding
  fullName: ModLib.Options.OptionBuilder.AddPadding
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ModLib.Options.OptionBuilder.AddText*
  commentId: Overload:ModLib.Options.OptionBuilder.AddText
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddText_System_String_UnityEngine_Vector2_System_Boolean_System_Nullable_UnityEngine_Color__
  name: AddText
  nameWithType: OptionBuilder.AddText
  fullName: ModLib.Options.OptionBuilder.AddText
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ModLib.Options.OptionBuilder.GetOrigin*
  commentId: Overload:ModLib.Options.OptionBuilder.GetOrigin
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_GetOrigin
  name: GetOrigin
  nameWithType: OptionBuilder.GetOrigin
  fullName: ModLib.Options.OptionBuilder.GetOrigin
- uid: ModLib.Options.OptionBuilder.SetOrigin*
  commentId: Overload:ModLib.Options.OptionBuilder.SetOrigin
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_SetOrigin_UnityEngine_Vector2_
  name: SetOrigin
  nameWithType: OptionBuilder.SetOrigin
  fullName: ModLib.Options.OptionBuilder.SetOrigin
- uid: ModLib.Options.OptionBuilder.ResetOrigin*
  commentId: Overload:ModLib.Options.OptionBuilder.ResetOrigin
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_ResetOrigin
  name: ResetOrigin
  nameWithType: OptionBuilder.ResetOrigin
  fullName: ModLib.Options.OptionBuilder.ResetOrigin
- uid: Menu.Remix.MixedUI.UIelement
  commentId: T:Menu.Remix.MixedUI.UIelement
  isExternal: true
  name: UIelement
  nameWithType: UIelement
  fullName: Menu.Remix.MixedUI.UIelement
- uid: ModLib.Options.OptionBuilder.AddElements*
  commentId: Overload:ModLib.Options.OptionBuilder.AddElements
  href: ModLib.Options.OptionBuilder.html#ModLib_Options_OptionBuilder_AddElements_Menu_Remix_MixedUI_UIelement___
  name: AddElements
  nameWithType: OptionBuilder.AddElements
  fullName: ModLib.Options.OptionBuilder.AddElements
- uid: Menu.Remix.MixedUI.UIelement[]
  isExternal: true
  name: UIelement[]
  nameWithType: UIelement[]
  fullName: Menu.Remix.MixedUI.UIelement[]
  nameWithType.vb: UIelement()
  fullName.vb: Menu.Remix.MixedUI.UIelement()
  name.vb: UIelement()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
  - name: (
  - name: )
