### YamlMime:ManagedReference
items:
- uid: ModLib.Collections.WeakList`1
  commentId: T:ModLib.Collections.WeakList`1
  id: WeakList`1
  parent: ModLib.Collections
  children:
  - ModLib.Collections.WeakList`1.#ctor
  - ModLib.Collections.WeakList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - ModLib.Collections.WeakList`1.#ctor(System.Int32)
  - ModLib.Collections.WeakList`1.IndexOf(`0)
  - ModLib.Collections.WeakList`1.Insert(System.Int32,`0)
  - ModLib.Collections.WeakList`1.Item(System.Int32)
  - ModLib.Collections.WeakList`1.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: WeakList<T>
  nameWithType: WeakList<T>
  fullName: ModLib.Collections.WeakList<T>
  type: Class
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: WeakList
    path: ../ModLib/Collections/WeakList.cs
    startLine: 9
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: A list of weakly-referenced values, which are removed when the underlying value is GC'ed.
  example: []
  syntax:
    content: 'public class WeakList<T> : WeakCollection<T>, IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable where T : class'
    typeParameters:
    - id: T
      description: The type of the elements of this list.
    content.vb: Public Class WeakList(Of T As Class) Inherits WeakCollection(Of T) Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  - ModLib.Collections.WeakCollection{{T}}
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - ModLib.Collections.WeakCollection{{T}}.values
  - ModLib.Collections.WeakCollection{{T}}.Add({T})
  - ModLib.Collections.WeakCollection{{T}}.Clear
  - ModLib.Collections.WeakCollection{{T}}.Count
  - ModLib.Collections.WeakCollection{{T}}.IsReadOnly
  - ModLib.Collections.WeakCollection{{T}}.Contains({T})
  - ModLib.Collections.WeakCollection{{T}}.CopyTo({T}[],System.Int32)
  - ModLib.Collections.WeakCollection{{T}}.Remove({T})
  - ModLib.Collections.WeakCollection{{T}}.GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: WeakList(Of T)
  fullName.vb: ModLib.Collections.WeakList(Of T)
  name.vb: WeakList(Of T)
- uid: ModLib.Collections.WeakList`1.#ctor
  commentId: M:ModLib.Collections.WeakList`1.#ctor
  id: '#ctor'
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: WeakList()
  nameWithType: WeakList<T>.WeakList()
  fullName: ModLib.Collections.WeakList<T>.WeakList()
  type: Constructor
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: .ctor
    path: ../ModLib/Collections/WeakList.cs
    startLine: 12
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Creates a new collection of weak references to a given type.
  example: []
  syntax:
    content: public WeakList()
    content.vb: Public Sub New()
  overload: ModLib.Collections.WeakList`1.#ctor*
  nameWithType.vb: WeakList(Of T).New()
  fullName.vb: ModLib.Collections.WeakList(Of T).New()
  name.vb: New()
- uid: ModLib.Collections.WeakList`1.#ctor(System.Int32)
  commentId: M:ModLib.Collections.WeakList`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: WeakList(int)
  nameWithType: WeakList<T>.WeakList(int)
  fullName: ModLib.Collections.WeakList<T>.WeakList(int)
  type: Constructor
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: .ctor
    path: ../ModLib/Collections/WeakList.cs
    startLine: 17
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Creates a new collection of weak references to a given type with the provided initial capacity.
  example: []
  syntax:
    content: public WeakList(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: The number of elements the collection can initially store.
    content.vb: Public Sub New(capacity As Integer)
  overload: ModLib.Collections.WeakList`1.#ctor*
  nameWithType.vb: WeakList(Of T).New(Integer)
  fullName.vb: ModLib.Collections.WeakList(Of T).New(Integer)
  name.vb: New(Integer)
- uid: ModLib.Collections.WeakList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:ModLib.Collections.WeakList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: WeakList(IEnumerable<T>)
  nameWithType: WeakList<T>.WeakList(IEnumerable<T>)
  fullName: ModLib.Collections.WeakList<T>.WeakList(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: .ctor
    path: ../ModLib/Collections/WeakList.cs
    startLine: 23
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Creates a new collection of weak references to a given type containing elements copied from the provided collection.
  example: []
  syntax:
    content: public WeakList(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The collection whose values will be copied.
    content.vb: Public Sub New(collection As IEnumerable(Of T))
  overload: ModLib.Collections.WeakList`1.#ctor*
  nameWithType.vb: WeakList(Of T).New(IEnumerable(Of T))
  fullName.vb: ModLib.Collections.WeakList(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  name.vb: New(IEnumerable(Of T))
- uid: ModLib.Collections.WeakList`1.Item(System.Int32)
  commentId: P:ModLib.Collections.WeakList`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: WeakList<T>.this[int]
  fullName: ModLib.Collections.WeakList<T>.this[int]
  type: Property
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: this[]
    path: ../ModLib/Collections/WeakList.cs
    startLine: 29
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Gets or sets the element at the specified index.
  example: []
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: The element at the specified index.
    content.vb: Public Default Property this[](index As Integer) As T
  overload: ModLib.Collections.WeakList`1.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: WeakList(Of T).this[](Integer)
  fullName.vb: ModLib.Collections.WeakList(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: ModLib.Collections.WeakList`1.IndexOf(`0)
  commentId: M:ModLib.Collections.WeakList`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: WeakList<T>.IndexOf(T)
  fullName: ModLib.Collections.WeakList<T>.IndexOf(T)
  type: Method
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IndexOf
    path: ../ModLib/Collections/WeakList.cs
    startLine: 36
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Determines the index of a specific item in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int32
      description: The index of <code class="paramref">item</code> if found in the list; otherwise, -1.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: ModLib.Collections.WeakList`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: WeakList(Of T).IndexOf(T)
  fullName.vb: ModLib.Collections.WeakList(Of T).IndexOf(T)
- uid: ModLib.Collections.WeakList`1.Insert(System.Int32,`0)
  commentId: M:ModLib.Collections.WeakList`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: WeakList<T>.Insert(int, T)
  fullName: ModLib.Collections.WeakList<T>.Insert(int, T)
  type: Method
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: Insert
    path: ../ModLib/Collections/WeakList.cs
    startLine: 50
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Inserts an item to the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> at the specified index.
  example: []
  syntax:
    content: public void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code class="paramref">item</code> should be inserted.
    - id: item
      type: '{T}'
      description: The object to insert into the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Insert(index As Integer, item As T)
  overload: ModLib.Collections.WeakList`1.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: WeakList(Of T).Insert(Integer, T)
  fullName.vb: ModLib.Collections.WeakList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: ModLib.Collections.WeakList`1.RemoveAt(System.Int32)
  commentId: M:ModLib.Collections.WeakList`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: ModLib.Collections.WeakList`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: WeakList<T>.RemoveAt(int)
  fullName: ModLib.Collections.WeakList<T>.RemoveAt(int)
  type: Method
  source:
    remote:
      path: ModLib/Collections/WeakList.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: RemoveAt
    path: ../ModLib/Collections/WeakList.cs
    startLine: 53
  assemblies:
  - ModLib
  namespace: ModLib.Collections
  summary: Removes the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> item at the specified index.
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: ModLib.Collections.WeakList`1.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: WeakList(Of T).RemoveAt(Integer)
  fullName.vb: ModLib.Collections.WeakList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
references:
- uid: ModLib.Collections
  commentId: N:ModLib.Collections
  href: ModLib.html
  name: ModLib.Collections
  nameWithType: ModLib.Collections
  fullName: ModLib.Collections
  spec.csharp:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Collections
    name: Collections
    href: ModLib.Collections.html
  spec.vb:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Collections
    name: Collections
    href: ModLib.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ModLib.Collections.WeakCollection{{T}}
  commentId: T:ModLib.Collections.WeakCollection{`0}
  parent: ModLib.Collections
  definition: ModLib.Collections.WeakCollection`1
  href: ModLib.Collections.WeakCollection-1.html
  name: WeakCollection<T>
  nameWithType: WeakCollection<T>
  fullName: ModLib.Collections.WeakCollection<T>
  nameWithType.vb: WeakCollection(Of T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T)
  name.vb: WeakCollection(Of T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1
    name: WeakCollection
    href: ModLib.Collections.WeakCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1
    name: WeakCollection
    href: ModLib.Collections.WeakCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: ModLib.Collections.WeakCollection{{T}}.values
  commentId: F:ModLib.Collections.WeakCollection{`0}.values
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.values
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_values
  name: values
  nameWithType: WeakCollection<T>.values
  fullName: ModLib.Collections.WeakCollection<T>.values
  nameWithType.vb: WeakCollection(Of T).values
  fullName.vb: ModLib.Collections.WeakCollection(Of T).values
- uid: ModLib.Collections.WeakCollection{{T}}.Add({T})
  commentId: M:ModLib.Collections.WeakCollection{`0}.Add(`0)
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.Add(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  name: Add(T)
  nameWithType: WeakCollection<T>.Add(T)
  fullName: ModLib.Collections.WeakCollection<T>.Add(T)
  nameWithType.vb: WeakCollection(Of T).Add(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Add(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.Add(`0)
    name: Add
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.Add(`0)
    name: Add
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection{{T}}.Clear
  commentId: M:ModLib.Collections.WeakCollection{`0}.Clear
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.Clear
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  name: Clear()
  nameWithType: WeakCollection<T>.Clear()
  fullName: ModLib.Collections.WeakCollection<T>.Clear()
  nameWithType.vb: WeakCollection(Of T).Clear()
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Clear()
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.Clear
    name: Clear
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.Clear
    name: Clear
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  - name: (
  - name: )
- uid: ModLib.Collections.WeakCollection{{T}}.Count
  commentId: P:ModLib.Collections.WeakCollection{`0}.Count
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.Count
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Count
  name: Count
  nameWithType: WeakCollection<T>.Count
  fullName: ModLib.Collections.WeakCollection<T>.Count
  nameWithType.vb: WeakCollection(Of T).Count
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Count
- uid: ModLib.Collections.WeakCollection{{T}}.IsReadOnly
  commentId: P:ModLib.Collections.WeakCollection{`0}.IsReadOnly
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.IsReadOnly
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_IsReadOnly
  name: IsReadOnly
  nameWithType: WeakCollection<T>.IsReadOnly
  fullName: ModLib.Collections.WeakCollection<T>.IsReadOnly
  nameWithType.vb: WeakCollection(Of T).IsReadOnly
  fullName.vb: ModLib.Collections.WeakCollection(Of T).IsReadOnly
- uid: ModLib.Collections.WeakCollection{{T}}.Contains({T})
  commentId: M:ModLib.Collections.WeakCollection{`0}.Contains(`0)
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.Contains(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  name: Contains(T)
  nameWithType: WeakCollection<T>.Contains(T)
  fullName: ModLib.Collections.WeakCollection<T>.Contains(T)
  nameWithType.vb: WeakCollection(Of T).Contains(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Contains(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.Contains(`0)
    name: Contains
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.Contains(`0)
    name: Contains
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:ModLib.Collections.WeakCollection{`0}.CopyTo(`0[],System.Int32)
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.CopyTo(`0[],System.Int32)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  name: CopyTo(T[], int)
  nameWithType: WeakCollection<T>.CopyTo(T[], int)
  fullName: ModLib.Collections.WeakCollection<T>.CopyTo(T[], int)
  nameWithType.vb: WeakCollection(Of T).CopyTo(T(), Integer)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ModLib.Collections.WeakCollection{{T}}.Remove({T})
  commentId: M:ModLib.Collections.WeakCollection{`0}.Remove(`0)
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.Remove(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  name: Remove(T)
  nameWithType: WeakCollection<T>.Remove(T)
  fullName: ModLib.Collections.WeakCollection<T>.Remove(T)
  nameWithType.vb: WeakCollection(Of T).Remove(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Remove(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.Remove(`0)
    name: Remove
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.Remove(`0)
    name: Remove
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection{{T}}.GetEnumerator
  commentId: M:ModLib.Collections.WeakCollection{`0}.GetEnumerator
  parent: ModLib.Collections.WeakCollection{{T}}
  definition: ModLib.Collections.WeakCollection`1.GetEnumerator
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  name: GetEnumerator()
  nameWithType: WeakCollection<T>.GetEnumerator()
  fullName: ModLib.Collections.WeakCollection<T>.GetEnumerator()
  nameWithType.vb: WeakCollection(Of T).GetEnumerator()
  fullName.vb: ModLib.Collections.WeakCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection{`0}.GetEnumerator
    name: GetEnumerator
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection{`0}.GetEnumerator
    name: GetEnumerator
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ModLib.Collections.WeakCollection`1
  commentId: T:ModLib.Collections.WeakCollection`1
  href: ModLib.Collections.WeakCollection-1.html
  name: WeakCollection<T>
  nameWithType: WeakCollection<T>
  fullName: ModLib.Collections.WeakCollection<T>
  nameWithType.vb: WeakCollection(Of T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T)
  name.vb: WeakCollection(Of T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1
    name: WeakCollection
    href: ModLib.Collections.WeakCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1
    name: WeakCollection
    href: ModLib.Collections.WeakCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: ModLib.Collections.WeakCollection`1.values
  commentId: F:ModLib.Collections.WeakCollection`1.values
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_values
  name: values
  nameWithType: WeakCollection<T>.values
  fullName: ModLib.Collections.WeakCollection<T>.values
  nameWithType.vb: WeakCollection(Of T).values
  fullName.vb: ModLib.Collections.WeakCollection(Of T).values
- uid: ModLib.Collections.WeakCollection`1.Add(`0)
  commentId: M:ModLib.Collections.WeakCollection`1.Add(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  name: Add(T)
  nameWithType: WeakCollection<T>.Add(T)
  fullName: ModLib.Collections.WeakCollection<T>.Add(T)
  nameWithType.vb: WeakCollection(Of T).Add(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Add(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.Add(`0)
    name: Add
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.Add(`0)
    name: Add
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Add__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection`1.Clear
  commentId: M:ModLib.Collections.WeakCollection`1.Clear
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  name: Clear()
  nameWithType: WeakCollection<T>.Clear()
  fullName: ModLib.Collections.WeakCollection<T>.Clear()
  nameWithType.vb: WeakCollection(Of T).Clear()
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Clear()
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.Clear
    name: Clear
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.Clear
    name: Clear
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Clear
  - name: (
  - name: )
- uid: ModLib.Collections.WeakCollection`1.Count
  commentId: P:ModLib.Collections.WeakCollection`1.Count
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Count
  name: Count
  nameWithType: WeakCollection<T>.Count
  fullName: ModLib.Collections.WeakCollection<T>.Count
  nameWithType.vb: WeakCollection(Of T).Count
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Count
- uid: ModLib.Collections.WeakCollection`1.IsReadOnly
  commentId: P:ModLib.Collections.WeakCollection`1.IsReadOnly
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_IsReadOnly
  name: IsReadOnly
  nameWithType: WeakCollection<T>.IsReadOnly
  fullName: ModLib.Collections.WeakCollection<T>.IsReadOnly
  nameWithType.vb: WeakCollection(Of T).IsReadOnly
  fullName.vb: ModLib.Collections.WeakCollection(Of T).IsReadOnly
- uid: ModLib.Collections.WeakCollection`1.Contains(`0)
  commentId: M:ModLib.Collections.WeakCollection`1.Contains(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  name: Contains(T)
  nameWithType: WeakCollection<T>.Contains(T)
  fullName: ModLib.Collections.WeakCollection<T>.Contains(T)
  nameWithType.vb: WeakCollection(Of T).Contains(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Contains(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.Contains(`0)
    name: Contains
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.Contains(`0)
    name: Contains
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:ModLib.Collections.WeakCollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  name: CopyTo(T[], int)
  nameWithType: WeakCollection<T>.CopyTo(T[], int)
  fullName: ModLib.Collections.WeakCollection<T>.CopyTo(T[], int)
  nameWithType.vb: WeakCollection(Of T).CopyTo(T(), Integer)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_CopyTo__0___System_Int32_
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ModLib.Collections.WeakCollection`1.Remove(`0)
  commentId: M:ModLib.Collections.WeakCollection`1.Remove(`0)
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  name: Remove(T)
  nameWithType: WeakCollection<T>.Remove(T)
  fullName: ModLib.Collections.WeakCollection<T>.Remove(T)
  nameWithType.vb: WeakCollection(Of T).Remove(T)
  fullName.vb: ModLib.Collections.WeakCollection(Of T).Remove(T)
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.Remove(`0)
    name: Remove
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.Remove(`0)
    name: Remove
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakCollection`1.GetEnumerator
  commentId: M:ModLib.Collections.WeakCollection`1.GetEnumerator
  href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  name: GetEnumerator()
  nameWithType: WeakCollection<T>.GetEnumerator()
  fullName: ModLib.Collections.WeakCollection<T>.GetEnumerator()
  nameWithType.vb: WeakCollection(Of T).GetEnumerator()
  fullName.vb: ModLib.Collections.WeakCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: ModLib.Collections.WeakCollection`1.GetEnumerator
    name: GetEnumerator
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.Collections.WeakCollection`1.GetEnumerator
    name: GetEnumerator
    href: ModLib.Collections.WeakCollection-1.html#ModLib_Collections_WeakCollection_1_GetEnumerator
  - name: (
  - name: )
- uid: ModLib.Collections.WeakList`1.#ctor*
  commentId: Overload:ModLib.Collections.WeakList`1.#ctor
  href: ModLib.Collections.WeakList-1.html#ModLib_Collections_WeakList_1__ctor
  name: WeakList
  nameWithType: WeakList<T>.WeakList
  fullName: ModLib.Collections.WeakList<T>.WeakList
  nameWithType.vb: WeakList(Of T).New
  fullName.vb: ModLib.Collections.WeakList(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: ModLib.Collections.WeakList`1.Item*
  commentId: Overload:ModLib.Collections.WeakList`1.Item
  href: ModLib.Collections.WeakList-1.html#ModLib_Collections_WeakList_1_Item_System_Int32_
  name: this
  nameWithType: WeakList<T>.this
  fullName: ModLib.Collections.WeakList<T>.this
  nameWithType.vb: WeakList(Of T).this[]
  fullName.vb: ModLib.Collections.WeakList(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ModLib.Collections.WeakList`1.IndexOf*
  commentId: Overload:ModLib.Collections.WeakList`1.IndexOf
  href: ModLib.Collections.WeakList-1.html#ModLib_Collections_WeakList_1_IndexOf__0_
  name: IndexOf
  nameWithType: WeakList<T>.IndexOf
  fullName: ModLib.Collections.WeakList<T>.IndexOf
  nameWithType.vb: WeakList(Of T).IndexOf
  fullName.vb: ModLib.Collections.WeakList(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: ModLib.Collections.WeakList`1.Insert*
  commentId: Overload:ModLib.Collections.WeakList`1.Insert
  href: ModLib.Collections.WeakList-1.html#ModLib_Collections_WeakList_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: WeakList<T>.Insert
  fullName: ModLib.Collections.WeakList<T>.Insert
  nameWithType.vb: WeakList(Of T).Insert
  fullName.vb: ModLib.Collections.WeakList(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ModLib.Collections.WeakList`1.RemoveAt*
  commentId: Overload:ModLib.Collections.WeakList`1.RemoveAt
  href: ModLib.Collections.WeakList-1.html#ModLib_Collections_WeakList_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: WeakList<T>.RemoveAt
  fullName: ModLib.Collections.WeakList<T>.RemoveAt
  nameWithType.vb: WeakList(Of T).RemoveAt
  fullName.vb: ModLib.Collections.WeakList(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
