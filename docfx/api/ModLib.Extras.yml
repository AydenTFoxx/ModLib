### YamlMime:ManagedReference
items:
- uid: ModLib.Extras
  commentId: T:ModLib.Extras
  id: Extras
  parent: ModLib
  children:
  - ModLib.Extras.InGameSession
  - ModLib.Extras.IsHostPlayer
  - ModLib.Extras.IsIICEnabled
  - ModLib.Extras.IsMeadowEnabled
  - ModLib.Extras.IsOnlineSession
  - ModLib.Extras.LogUtilsAvailable
  - ModLib.Extras.ModLibAvailable
  - ModLib.Extras.WrapAction(System.Action,System.Boolean)
  - ModLib.Extras.WrapILHook(System.Action{MonoMod.Cil.ILContext})
  langs:
  - csharp
  - vb
  name: Extras
  nameWithType: Extras
  fullName: ModLib.Extras
  type: Class
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: Extras
    path: ../ModLib/Extras.cs
    startLine: 20
  assemblies:
  - ModLib
  namespace: ModLib
  summary: A collection of utilities and wrappers for common modding activities.
  example: []
  syntax:
    content: public static class Extras
    content.vb: Public Module Extras
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: ModLib.Extras.IsMeadowEnabled
  commentId: P:ModLib.Extras.IsMeadowEnabled
  id: IsMeadowEnabled
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: IsMeadowEnabled
  nameWithType: Extras.IsMeadowEnabled
  fullName: ModLib.Extras.IsMeadowEnabled
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsMeadowEnabled
    path: ../ModLib/Extras.cs
    startLine: 25
  assemblies:
  - ModLib
  namespace: ModLib
  summary: Whether or not the Rain Meadow mod is present. This value is cached for performance purposes.
  example: []
  syntax:
    content: public static bool IsMeadowEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsMeadowEnabled As Boolean
  overload: ModLib.Extras.IsMeadowEnabled*
- uid: ModLib.Extras.IsIICEnabled
  commentId: P:ModLib.Extras.IsIICEnabled
  id: IsIICEnabled
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: IsIICEnabled
  nameWithType: Extras.IsIICEnabled
  fullName: ModLib.Extras.IsIICEnabled
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsIICEnabled
    path: ../ModLib/Extras.cs
    startLine: 30
  assemblies:
  - ModLib
  namespace: ModLib
  summary: 'Whether or not the Improved Input Config: Extended mod is present. This value is cached for performance purposes.'
  example: []
  syntax:
    content: public static bool IsIICEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsIICEnabled As Boolean
  overload: ModLib.Extras.IsIICEnabled*
- uid: ModLib.Extras.IsOnlineSession
  commentId: P:ModLib.Extras.IsOnlineSession
  id: IsOnlineSession
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: IsOnlineSession
  nameWithType: Extras.IsOnlineSession
  fullName: ModLib.Extras.IsOnlineSession
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsOnlineSession
    path: ../ModLib/Extras.cs
    startLine: 35
  assemblies:
  - ModLib
  namespace: ModLib
  summary: If the current game session is in an online lobby.
  example: []
  syntax:
    content: public static bool IsOnlineSession { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsOnlineSession As Boolean
  overload: ModLib.Extras.IsOnlineSession*
- uid: ModLib.Extras.IsHostPlayer
  commentId: P:ModLib.Extras.IsHostPlayer
  id: IsHostPlayer
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: IsHostPlayer
  nameWithType: Extras.IsHostPlayer
  fullName: ModLib.Extras.IsHostPlayer
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsHostPlayer
    path: ../ModLib/Extras.cs
    startLine: 40
  assemblies:
  - ModLib
  namespace: ModLib
  summary: If the player is the host of the current game session. On Singleplayer, this is always true.
  example: []
  syntax:
    content: public static bool IsHostPlayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsHostPlayer As Boolean
  overload: ModLib.Extras.IsHostPlayer*
- uid: ModLib.Extras.InGameSession
  commentId: P:ModLib.Extras.InGameSession
  id: InGameSession
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: InGameSession
  nameWithType: Extras.InGameSession
  fullName: ModLib.Extras.InGameSession
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: InGameSession
    path: ../ModLib/Extras.cs
    startLine: 45
  assemblies:
  - ModLib
  namespace: ModLib
  summary: If the player is currently in-game and not on the main menu.
  example: []
  syntax:
    content: public static bool InGameSession { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property InGameSession As Boolean
  overload: ModLib.Extras.InGameSession*
- uid: ModLib.Extras.LogUtilsAvailable
  commentId: P:ModLib.Extras.LogUtilsAvailable
  id: LogUtilsAvailable
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: LogUtilsAvailable
  nameWithType: Extras.LogUtilsAvailable
  fullName: ModLib.Extras.LogUtilsAvailable
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: LogUtilsAvailable
    path: ../ModLib/Extras.cs
    startLine: 50
  assemblies:
  - ModLib
  namespace: ModLib
  summary: Determines if LogUtils is currently loaded and available for usage.
  example: []
  syntax:
    content: public static bool LogUtilsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property LogUtilsAvailable As Boolean
  overload: ModLib.Extras.LogUtilsAvailable*
- uid: ModLib.Extras.ModLibAvailable
  commentId: P:ModLib.Extras.ModLibAvailable
  id: ModLibAvailable
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: ModLibAvailable
  nameWithType: Extras.ModLibAvailable
  fullName: ModLib.Extras.ModLibAvailable
  type: Property
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: ModLibAvailable
    path: ../ModLib/Extras.cs
    startLine: 55
  assemblies:
  - ModLib
  namespace: ModLib
  summary: Determines if ModLib is currently loaded and available for usage.
  example: []
  syntax:
    content: public static bool ModLibAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property ModLibAvailable As Boolean
  overload: ModLib.Extras.ModLibAvailable*
- uid: ModLib.Extras.WrapAction(System.Action,System.Boolean)
  commentId: M:ModLib.Extras.WrapAction(System.Action,System.Boolean)
  id: WrapAction(System.Action,System.Boolean)
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: WrapAction(Action, bool)
  nameWithType: Extras.WrapAction(Action, bool)
  fullName: ModLib.Extras.WrapAction(System.Action, bool)
  type: Method
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: WrapAction
    path: ../ModLib/Extras.cs
    startLine: 76
  assemblies:
  - ModLib
  namespace: ModLib
  summary: Wraps a given action in a try-catch, safely performing its code while handling potential exceptions.
  example: []
  syntax:
    content: public static Action? WrapAction(Action action, bool autoInvoke = true)
    parameters:
    - id: action
      type: System.Action
      description: The action to be executed.
    - id: autoInvoke
      type: System.Boolean
      description: If true, the resulting action is invoked immediately, and <code>null</code> is returned instead.
    return:
      type: System.Action
      description: The wrapped <xref href="System.Action" data-throw-if-not-resolved="false"></xref> object, or <code>null</code> if <code class="paramref">autoInvoke</code> was set to true.
    content.vb: Public Shared Function WrapAction(action As Action, autoInvoke As Boolean = True) As Action
  overload: ModLib.Extras.WrapAction*
  nameWithType.vb: Extras.WrapAction(Action, Boolean)
  fullName.vb: ModLib.Extras.WrapAction(System.Action, Boolean)
  name.vb: WrapAction(Action, Boolean)
- uid: ModLib.Extras.WrapILHook(System.Action{MonoMod.Cil.ILContext})
  commentId: M:ModLib.Extras.WrapILHook(System.Action{MonoMod.Cil.ILContext})
  id: WrapILHook(System.Action{MonoMod.Cil.ILContext})
  parent: ModLib.Extras
  langs:
  - csharp
  - vb
  name: WrapILHook(Action<ILContext>)
  nameWithType: Extras.WrapILHook(Action<ILContext>)
  fullName: ModLib.Extras.WrapILHook(System.Action<MonoMod.Cil.ILContext>)
  type: Method
  source:
    remote:
      path: ModLib/Extras.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: WrapILHook
    path: ../ModLib/Extras.cs
    startLine: 114
  assemblies:
  - ModLib
  namespace: ModLib
  summary: Wraps a given IL hook in a try-catch, preventing it from breaking other code when applied.
  remarks: Usage of this method is akin to the original <code>WrapInit</code> method; See SlugTemplate for an example of this.
  example: []
  syntax:
    content: public static ILContext.Manipulator WrapILHook(Action<ILContext> action)
    parameters:
    - id: action
      type: System.Action{MonoMod.Cil.ILContext}
      description: The hook method to be wrapped.
    return:
      type: MonoMod.Cil.ILContext.Manipulator
      description: An <code>ILContext.Manipulator</code> instance to be passed in place of the method itself.
    content.vb: Public Shared Function WrapILHook(action As Action(Of ILContext)) As ILContext.Manipulator
  overload: ModLib.Extras.WrapILHook*
  nameWithType.vb: Extras.WrapILHook(Action(Of ILContext))
  fullName.vb: ModLib.Extras.WrapILHook(System.Action(Of MonoMod.Cil.ILContext))
  name.vb: WrapILHook(Action(Of ILContext))
references:
- uid: ModLib
  commentId: N:ModLib
  href: ModLib.html
  name: ModLib
  nameWithType: ModLib
  fullName: ModLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ModLib.Extras.IsMeadowEnabled*
  commentId: Overload:ModLib.Extras.IsMeadowEnabled
  href: ModLib.Extras.html#ModLib_Extras_IsMeadowEnabled
  name: IsMeadowEnabled
  nameWithType: Extras.IsMeadowEnabled
  fullName: ModLib.Extras.IsMeadowEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ModLib.Extras.IsIICEnabled*
  commentId: Overload:ModLib.Extras.IsIICEnabled
  href: ModLib.Extras.html#ModLib_Extras_IsIICEnabled
  name: IsIICEnabled
  nameWithType: Extras.IsIICEnabled
  fullName: ModLib.Extras.IsIICEnabled
- uid: ModLib.Extras.IsOnlineSession*
  commentId: Overload:ModLib.Extras.IsOnlineSession
  href: ModLib.Extras.html#ModLib_Extras_IsOnlineSession
  name: IsOnlineSession
  nameWithType: Extras.IsOnlineSession
  fullName: ModLib.Extras.IsOnlineSession
- uid: ModLib.Extras.IsHostPlayer*
  commentId: Overload:ModLib.Extras.IsHostPlayer
  href: ModLib.Extras.html#ModLib_Extras_IsHostPlayer
  name: IsHostPlayer
  nameWithType: Extras.IsHostPlayer
  fullName: ModLib.Extras.IsHostPlayer
- uid: ModLib.Extras.InGameSession*
  commentId: Overload:ModLib.Extras.InGameSession
  href: ModLib.Extras.html#ModLib_Extras_InGameSession
  name: InGameSession
  nameWithType: Extras.InGameSession
  fullName: ModLib.Extras.InGameSession
- uid: ModLib.Extras.LogUtilsAvailable*
  commentId: Overload:ModLib.Extras.LogUtilsAvailable
  href: ModLib.Extras.html#ModLib_Extras_LogUtilsAvailable
  name: LogUtilsAvailable
  nameWithType: Extras.LogUtilsAvailable
  fullName: ModLib.Extras.LogUtilsAvailable
- uid: ModLib.Extras.ModLibAvailable*
  commentId: Overload:ModLib.Extras.ModLibAvailable
  href: ModLib.Extras.html#ModLib_Extras_ModLibAvailable
  name: ModLibAvailable
  nameWithType: Extras.ModLibAvailable
  fullName: ModLib.Extras.ModLibAvailable
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: ModLib.Extras.WrapAction*
  commentId: Overload:ModLib.Extras.WrapAction
  href: ModLib.Extras.html#ModLib_Extras_WrapAction_System_Action_System_Boolean_
  name: WrapAction
  nameWithType: Extras.WrapAction
  fullName: ModLib.Extras.WrapAction
- uid: ModLib.Extras.WrapILHook*
  commentId: Overload:ModLib.Extras.WrapILHook
  href: ModLib.Extras.html#ModLib_Extras_WrapILHook_System_Action_MonoMod_Cil_ILContext__
  name: WrapILHook
  nameWithType: Extras.WrapILHook
  fullName: ModLib.Extras.WrapILHook
- uid: System.Action{MonoMod.Cil.ILContext}
  commentId: T:System.Action{MonoMod.Cil.ILContext}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ILContext>
  nameWithType: Action<ILContext>
  fullName: System.Action<MonoMod.Cil.ILContext>
  nameWithType.vb: Action(Of ILContext)
  fullName.vb: System.Action(Of MonoMod.Cil.ILContext)
  name.vb: Action(Of ILContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MonoMod.Cil.ILContext
    name: ILContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoMod.Cil.ILContext
    name: ILContext
    isExternal: true
  - name: )
- uid: MonoMod.Cil.ILContext.Manipulator
  commentId: T:MonoMod.Cil.ILContext.Manipulator
  parent: MonoMod.Cil
  isExternal: true
  name: ILContext.Manipulator
  nameWithType: ILContext.Manipulator
  fullName: MonoMod.Cil.ILContext.Manipulator
  spec.csharp:
  - uid: MonoMod.Cil.ILContext
    name: ILContext
    isExternal: true
  - name: .
  - uid: MonoMod.Cil.ILContext.Manipulator
    name: Manipulator
    isExternal: true
  spec.vb:
  - uid: MonoMod.Cil.ILContext
    name: ILContext
    isExternal: true
  - name: .
  - uid: MonoMod.Cil.ILContext.Manipulator
    name: Manipulator
    isExternal: true
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoMod.Cil
  commentId: N:MonoMod.Cil
  isExternal: true
  name: MonoMod.Cil
  nameWithType: MonoMod.Cil
  fullName: MonoMod.Cil
  spec.csharp:
  - uid: MonoMod
    name: MonoMod
    isExternal: true
  - name: .
  - uid: MonoMod.Cil
    name: Cil
    isExternal: true
  spec.vb:
  - uid: MonoMod
    name: MonoMod
    isExternal: true
  - name: .
  - uid: MonoMod.Cil
    name: Cil
    isExternal: true
