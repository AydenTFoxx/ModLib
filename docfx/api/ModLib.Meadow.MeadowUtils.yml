### YamlMime:ManagedReference
items:
- uid: ModLib.Meadow.MeadowUtils
  commentId: T:ModLib.Meadow.MeadowUtils
  id: MeadowUtils
  parent: ModLib.Meadow
  children:
  - ModLib.Meadow.MeadowUtils.GetOnlineName(Player)
  - ModLib.Meadow.MeadowUtils.IsGameMode(ModLib.Meadow.MeadowGameModes)
  - ModLib.Meadow.MeadowUtils.IsHost
  - ModLib.Meadow.MeadowUtils.IsMine(PhysicalObject)
  - ModLib.Meadow.MeadowUtils.IsOnline
  - ModLib.Meadow.MeadowUtils.LogSystemMessage(System.String)
  - ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject)
  - ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject,System.Action{RainMeadow.GenericResult})
  - ModLib.Meadow.MeadowUtils.RequestOwnership(RainMeadow.OnlinePhysicalObject,System.Action{RainMeadow.GenericResult})
  langs:
  - csharp
  - vb
  name: MeadowUtils
  nameWithType: MeadowUtils
  fullName: ModLib.Meadow.MeadowUtils
  type: Class
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: MeadowUtils
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 19
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Utilities for retrieving and evaluating data exclusive to the Rain Meadow mod.
  remarks: >-
    <p>
        Warning: Always ensure Rain Meadow is enabled before using this class!
    </p>

    <p>
        Properties and methods like <xref href="ModLib.Extras.IsMeadowEnabled" data-throw-if-not-resolved="false"></xref>, <xref href="ModLib.Extras.IsOnlineSession" data-throw-if-not-resolved="false"></xref>, and <xref href="ModLib.CompatibilityManager.IsRainMeadowEnabled" data-throw-if-not-resolved="false"></xref>
        can all be used/queried before accessing any of this class's members. Otherwise, a <xref href="System.TypeLoadException" data-throw-if-not-resolved="false"></xref> will be thrown, even if the given member does not have any Meadow-specific code.
    </p>
  example: []
  syntax:
    content: public static class MeadowUtils
    content.vb: Public Module MeadowUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: ModLib.Meadow.MeadowUtils.IsOnline
  commentId: P:ModLib.Meadow.MeadowUtils.IsOnline
  id: IsOnline
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: IsOnline
  nameWithType: MeadowUtils.IsOnline
  fullName: ModLib.Meadow.MeadowUtils.IsOnline
  type: Property
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsOnline
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 24
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Determines if the current game session is an online lobby.
  example: []
  syntax:
    content: public static bool IsOnline { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsOnline As Boolean
  overload: ModLib.Meadow.MeadowUtils.IsOnline*
- uid: ModLib.Meadow.MeadowUtils.IsHost
  commentId: P:ModLib.Meadow.MeadowUtils.IsHost
  id: IsHost
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: IsHost
  nameWithType: MeadowUtils.IsHost
  fullName: ModLib.Meadow.MeadowUtils.IsHost
  type: Property
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsHost
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 29
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Determines if this player is the host of an online session. On singleplayer, this is always true.
  example: []
  syntax:
    content: public static bool IsHost { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsHost As Boolean
  overload: ModLib.Meadow.MeadowUtils.IsHost*
- uid: ModLib.Meadow.MeadowUtils.IsMine(PhysicalObject)
  commentId: M:ModLib.Meadow.MeadowUtils.IsMine(PhysicalObject)
  id: IsMine(PhysicalObject)
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: IsMine(PhysicalObject)
  nameWithType: MeadowUtils.IsMine(PhysicalObject)
  fullName: ModLib.Meadow.MeadowUtils.IsMine(PhysicalObject)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsMine
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 39
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Determines if the given physical object belongs to the client.
  remarks: If the current game session is not online, this always returns <code>true</code>.
  example: []
  syntax:
    content: public static bool IsMine(PhysicalObject physicalObject)
    parameters:
    - id: physicalObject
      type: PhysicalObject
      description: The object itself.
    return:
      type: System.Boolean
      description: <code>true</code> if the physical object belongs to this client (or the current game session is not online), <code>false</code> otherwise.
    content.vb: Public Shared Function IsMine(physicalObject As PhysicalObject) As Boolean
  overload: ModLib.Meadow.MeadowUtils.IsMine*
- uid: ModLib.Meadow.MeadowUtils.GetOnlineName(Player)
  commentId: M:ModLib.Meadow.MeadowUtils.GetOnlineName(Player)
  id: GetOnlineName(Player)
  isExtensionMethod: true
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: GetOnlineName(Player)
  nameWithType: MeadowUtils.GetOnlineName(Player)
  fullName: ModLib.Meadow.MeadowUtils.GetOnlineName(Player)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: GetOnlineName
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 46
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Obtains the online name of the given player.
  example: []
  syntax:
    content: public static string? GetOnlineName(this Player self)
    parameters:
    - id: self
      type: Player
      description: The player to be queried.
    return:
      type: System.String
      description: A <code>String</code> containing the player's name, or <code>null</code> if none is found.
    content.vb: Public Shared Function GetOnlineName(self As Player) As String
  overload: ModLib.Meadow.MeadowUtils.GetOnlineName*
- uid: ModLib.Meadow.MeadowUtils.LogSystemMessage(System.String)
  commentId: M:ModLib.Meadow.MeadowUtils.LogSystemMessage(System.String)
  id: LogSystemMessage(System.String)
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: LogSystemMessage(string)
  nameWithType: MeadowUtils.LogSystemMessage(string)
  fullName: ModLib.Meadow.MeadowUtils.LogSystemMessage(string)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: LogSystemMessage
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 74
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Logs a message to Rain Meadow's chat (as the system) for all online players.
  example: []
  syntax:
    content: public static void LogSystemMessage(string message)
    parameters:
    - id: message
      type: System.String
      description: The contents of the message to be sent.
    content.vb: Public Shared Sub LogSystemMessage(message As String)
  overload: ModLib.Meadow.MeadowUtils.LogSystemMessage*
  nameWithType.vb: MeadowUtils.LogSystemMessage(String)
  fullName.vb: ModLib.Meadow.MeadowUtils.LogSystemMessage(String)
  name.vb: LogSystemMessage(String)
- uid: ModLib.Meadow.MeadowUtils.IsGameMode(ModLib.Meadow.MeadowGameModes)
  commentId: M:ModLib.Meadow.MeadowUtils.IsGameMode(ModLib.Meadow.MeadowGameModes)
  id: IsGameMode(ModLib.Meadow.MeadowGameModes)
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: IsGameMode(MeadowGameModes)
  nameWithType: MeadowUtils.IsGameMode(MeadowGameModes)
  fullName: ModLib.Meadow.MeadowUtils.IsGameMode(ModLib.Meadow.MeadowGameModes)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: IsGameMode
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 93
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Determines if the current online game session is of the given game mode type. If not online, this is always false.
  example: []
  syntax:
    content: public static bool IsGameMode(MeadowGameModes gameMode)
    parameters:
    - id: gameMode
      type: ModLib.Meadow.MeadowGameModes
      description: The gamemode to be tested for.
    return:
      type: System.Boolean
      description: <code>true</code> if the current game session is both online and of the given game mode type; <code>false</code> otherwise.
    content.vb: Public Shared Function IsGameMode(gameMode As MeadowGameModes) As Boolean
  overload: ModLib.Meadow.MeadowUtils.IsGameMode*
- uid: ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject)
  commentId: M:ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject)
  id: RequestOwnership(PhysicalObject)
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: RequestOwnership(PhysicalObject)
  nameWithType: MeadowUtils.RequestOwnership(PhysicalObject)
  fullName: ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: RequestOwnership
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 115
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Requests the owner of a given realized object for its ownership.
  remarks: Use this overload when running code in an environment where Rain Meadow may or may not be enabled.
  example: []
  syntax:
    content: public static void RequestOwnership(PhysicalObject physicalObject)
    parameters:
    - id: physicalObject
      type: PhysicalObject
      description: The realized object whose ownership will be requested.
    content.vb: Public Shared Sub RequestOwnership(physicalObject As PhysicalObject)
  overload: ModLib.Meadow.MeadowUtils.RequestOwnership*
- uid: ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject,System.Action{RainMeadow.GenericResult})
  commentId: M:ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject,System.Action{RainMeadow.GenericResult})
  id: RequestOwnership(PhysicalObject,System.Action{RainMeadow.GenericResult})
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: RequestOwnership(PhysicalObject, Action<GenericResult>)
  nameWithType: MeadowUtils.RequestOwnership(PhysicalObject, Action<GenericResult>)
  fullName: ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject, System.Action<RainMeadow.GenericResult>)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: RequestOwnership
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 124
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Requests the owner of a given realized object for its ownership, then runs a given callback method after resolving the request.
  example: []
  syntax:
    content: public static void RequestOwnership(PhysicalObject physicalObject, Action<GenericResult> callback)
    parameters:
    - id: physicalObject
      type: PhysicalObject
      description: The realized object whose ownership will be requested.
    - id: callback
      type: System.Action{RainMeadow.GenericResult}
      description: The callback method to be executed after resolving the request.
    content.vb: Public Shared Sub RequestOwnership(physicalObject As PhysicalObject, callback As Action(Of GenericResult))
  overload: ModLib.Meadow.MeadowUtils.RequestOwnership*
  nameWithType.vb: MeadowUtils.RequestOwnership(PhysicalObject, Action(Of GenericResult))
  fullName.vb: ModLib.Meadow.MeadowUtils.RequestOwnership(PhysicalObject, System.Action(Of RainMeadow.GenericResult))
  name.vb: RequestOwnership(PhysicalObject, Action(Of GenericResult))
- uid: ModLib.Meadow.MeadowUtils.RequestOwnership(RainMeadow.OnlinePhysicalObject,System.Action{RainMeadow.GenericResult})
  commentId: M:ModLib.Meadow.MeadowUtils.RequestOwnership(RainMeadow.OnlinePhysicalObject,System.Action{RainMeadow.GenericResult})
  id: RequestOwnership(RainMeadow.OnlinePhysicalObject,System.Action{RainMeadow.GenericResult})
  parent: ModLib.Meadow.MeadowUtils
  langs:
  - csharp
  - vb
  name: RequestOwnership(OnlinePhysicalObject, Action<GenericResult>?)
  nameWithType: MeadowUtils.RequestOwnership(OnlinePhysicalObject, Action<GenericResult>?)
  fullName: ModLib.Meadow.MeadowUtils.RequestOwnership(RainMeadow.OnlinePhysicalObject, System.Action<RainMeadow.GenericResult>?)
  type: Method
  source:
    remote:
      path: ModLib/Meadow/MeadowUtils.cs
      branch: devel
      repo: https://github.com/AydenTFoxx/ModLib.git
    id: RequestOwnership
    path: ../ModLib/Meadow/MeadowUtils.cs
    startLine: 133
  assemblies:
  - ModLib
  namespace: ModLib.Meadow
  summary: Requests the owner of a given online object for its ownership, then optionally runs a callback method after resolving the request.
  example: []
  syntax:
    content: public static void RequestOwnership(OnlinePhysicalObject onlineObject, Action<GenericResult>? callback = null)
    parameters:
    - id: onlineObject
      type: RainMeadow.OnlinePhysicalObject
      description: The online object whose ownership will be requested.
    - id: callback
      type: System.Action{RainMeadow.GenericResult}
      description: The optional callback method to be executed after resolving the request.
    content.vb: Public Shared Sub RequestOwnership(onlineObject As OnlinePhysicalObject, callback As Action(Of GenericResult) = Nothing)
  overload: ModLib.Meadow.MeadowUtils.RequestOwnership*
  nameWithType.vb: MeadowUtils.RequestOwnership(OnlinePhysicalObject, Action(Of GenericResult))
  fullName.vb: ModLib.Meadow.MeadowUtils.RequestOwnership(RainMeadow.OnlinePhysicalObject, System.Action(Of RainMeadow.GenericResult))
  name.vb: RequestOwnership(OnlinePhysicalObject, Action(Of GenericResult))
references:
- uid: ModLib.Extras.IsMeadowEnabled
  commentId: P:ModLib.Extras.IsMeadowEnabled
  href: ModLib.Extras.html#ModLib_Extras_IsMeadowEnabled
  name: IsMeadowEnabled
  nameWithType: Extras.IsMeadowEnabled
  fullName: ModLib.Extras.IsMeadowEnabled
- uid: ModLib.Extras.IsOnlineSession
  commentId: P:ModLib.Extras.IsOnlineSession
  href: ModLib.Extras.html#ModLib_Extras_IsOnlineSession
  name: IsOnlineSession
  nameWithType: Extras.IsOnlineSession
  fullName: ModLib.Extras.IsOnlineSession
- uid: ModLib.CompatibilityManager.IsRainMeadowEnabled
  commentId: M:ModLib.CompatibilityManager.IsRainMeadowEnabled
  href: ModLib.CompatibilityManager.html#ModLib_CompatibilityManager_IsRainMeadowEnabled
  name: IsRainMeadowEnabled()
  nameWithType: CompatibilityManager.IsRainMeadowEnabled()
  fullName: ModLib.CompatibilityManager.IsRainMeadowEnabled()
  spec.csharp:
  - uid: ModLib.CompatibilityManager.IsRainMeadowEnabled
    name: IsRainMeadowEnabled
    href: ModLib.CompatibilityManager.html#ModLib_CompatibilityManager_IsRainMeadowEnabled
  - name: (
  - name: )
  spec.vb:
  - uid: ModLib.CompatibilityManager.IsRainMeadowEnabled
    name: IsRainMeadowEnabled
    href: ModLib.CompatibilityManager.html#ModLib_CompatibilityManager_IsRainMeadowEnabled
  - name: (
  - name: )
- uid: System.TypeLoadException
  commentId: T:System.TypeLoadException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.typeloadexception
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
- uid: ModLib.Meadow
  commentId: N:ModLib.Meadow
  href: ModLib.html
  name: ModLib.Meadow
  nameWithType: ModLib.Meadow
  fullName: ModLib.Meadow
  spec.csharp:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Meadow
    name: Meadow
    href: ModLib.Meadow.html
  spec.vb:
  - uid: ModLib
    name: ModLib
    href: ModLib.html
  - name: .
  - uid: ModLib.Meadow
    name: Meadow
    href: ModLib.Meadow.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ModLib.Meadow.MeadowUtils.IsOnline*
  commentId: Overload:ModLib.Meadow.MeadowUtils.IsOnline
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_IsOnline
  name: IsOnline
  nameWithType: MeadowUtils.IsOnline
  fullName: ModLib.Meadow.MeadowUtils.IsOnline
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ModLib.Meadow.MeadowUtils.IsHost*
  commentId: Overload:ModLib.Meadow.MeadowUtils.IsHost
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_IsHost
  name: IsHost
  nameWithType: MeadowUtils.IsHost
  fullName: ModLib.Meadow.MeadowUtils.IsHost
- uid: ModLib.Meadow.MeadowUtils.IsMine*
  commentId: Overload:ModLib.Meadow.MeadowUtils.IsMine
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_IsMine_PhysicalObject_
  name: IsMine
  nameWithType: MeadowUtils.IsMine
  fullName: ModLib.Meadow.MeadowUtils.IsMine
- uid: PhysicalObject
  commentId: T:PhysicalObject
  isExternal: true
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: ModLib.Meadow.MeadowUtils.GetOnlineName*
  commentId: Overload:ModLib.Meadow.MeadowUtils.GetOnlineName
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_GetOnlineName_Player_
  name: GetOnlineName
  nameWithType: MeadowUtils.GetOnlineName
  fullName: ModLib.Meadow.MeadowUtils.GetOnlineName
- uid: Player
  commentId: T:Player
  isExternal: true
  name: Player
  nameWithType: Player
  fullName: Player
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ModLib.Meadow.MeadowUtils.LogSystemMessage*
  commentId: Overload:ModLib.Meadow.MeadowUtils.LogSystemMessage
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_LogSystemMessage_System_String_
  name: LogSystemMessage
  nameWithType: MeadowUtils.LogSystemMessage
  fullName: ModLib.Meadow.MeadowUtils.LogSystemMessage
- uid: ModLib.Meadow.MeadowUtils.IsGameMode*
  commentId: Overload:ModLib.Meadow.MeadowUtils.IsGameMode
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_IsGameMode_ModLib_Meadow_MeadowGameModes_
  name: IsGameMode
  nameWithType: MeadowUtils.IsGameMode
  fullName: ModLib.Meadow.MeadowUtils.IsGameMode
- uid: ModLib.Meadow.MeadowGameModes
  commentId: T:ModLib.Meadow.MeadowGameModes
  parent: ModLib.Meadow
  href: ModLib.Meadow.MeadowGameModes.html
  name: MeadowGameModes
  nameWithType: MeadowGameModes
  fullName: ModLib.Meadow.MeadowGameModes
- uid: ModLib.Meadow.MeadowUtils.RequestOwnership*
  commentId: Overload:ModLib.Meadow.MeadowUtils.RequestOwnership
  href: ModLib.Meadow.MeadowUtils.html#ModLib_Meadow_MeadowUtils_RequestOwnership_PhysicalObject_
  name: RequestOwnership
  nameWithType: MeadowUtils.RequestOwnership
  fullName: ModLib.Meadow.MeadowUtils.RequestOwnership
- uid: System.Action{RainMeadow.GenericResult}
  commentId: T:System.Action{RainMeadow.GenericResult}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<GenericResult>
  nameWithType: Action<GenericResult>
  fullName: System.Action<RainMeadow.GenericResult>
  nameWithType.vb: Action(Of GenericResult)
  fullName.vb: System.Action(Of RainMeadow.GenericResult)
  name.vb: Action(Of GenericResult)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: RainMeadow.GenericResult
    name: GenericResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: RainMeadow.GenericResult
    name: GenericResult
    isExternal: true
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: RainMeadow.OnlinePhysicalObject
  commentId: T:RainMeadow.OnlinePhysicalObject
  parent: RainMeadow
  isExternal: true
  name: OnlinePhysicalObject
  nameWithType: OnlinePhysicalObject
  fullName: RainMeadow.OnlinePhysicalObject
- uid: RainMeadow
  commentId: N:RainMeadow
  isExternal: true
  name: RainMeadow
  nameWithType: RainMeadow
  fullName: RainMeadow
